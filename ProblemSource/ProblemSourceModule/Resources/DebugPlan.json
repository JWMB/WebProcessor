{
  "__type": "LinearTrainingPlan",
  "metaphor": "Magical",
  "overrideMetaphorTrigger": true,
  "autoConnectType": "THREE-WAY",
  "isTraining": true,
  "triggers": [],
  "tests": [
    {
      "title": "Asteroids",
      "id": "WM_asteroids#inf",
      "phases": [
        {
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "dynamicValue": {
                "type": "MEDALS",
                "values": [
                  5,
                  6,
                  7
                ],
                "adaptAfterNoOfFails": 2
              }
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "type": "PhaseWorkingMemory",
          "stimuliType": "WM_MOVING"
        }
      ]
    },
    {
      "title": "Number comparison test",
      "id": "numberComparison01",
      "progVisualizer": "ProgVisualizerSnails",
      "progVisualizerData": {
        "progressIndicatorType": "END",
        "useExponential": false,
        "opponentGoalScreenPosition": 1
      },
      "phases": [
        {
          "type": "PhaseBase",
          "phase": "GUIDE",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 4
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "hintCorrect": true,
              "errorHiliteType": "SHOW_CORRECT"
            },
            "problems": [
              {
                "problemString": "DOT_3,DOT_1",
                "type": "VALUE_COMPARISON",
                "showDemoAnimation": true
              },
              {
                "problemString": "DOT_4,DOT_2",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_4",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_5,DOT_2",
                "type": "VALUE_COMPARISON"
              }
            ]
          }
        },
        {
          "type": "PhaseBase",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 40
            },
            "end": {
              "type": "TIME",
              "value": 180
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": false,
              "errorHiliteType": "NONE"
            },
            "problems": [
              {
                "problemString": "DOT_5,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_2,DOT_6",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_3,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_4,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_4",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_5,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_6,DOT_2",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_3",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_6,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_5",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_4",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_3,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_5,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_4",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_2,DOT_7",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_4,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_3",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_5",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_4",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_5",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_3",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_4",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_4,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_5",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_2,DOT_6",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_3,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_5,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_4,DOT_1",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_3",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "DOT_1,DOT_5",
                "type": "VALUE_COMPARISON"
              }
            ]
          }
        },
        {
          "type": "PhaseBase",
          "phase": "GUIDE",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 3
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "hintCorrect": true,
              "errorHiliteType": "SHOW_CORRECT"
            },
            "problems": [
              {
                "problemString": "NUM_2,NUM_4",
                "type": "VALUE_COMPARISON",
                "showDemoAnimation": true
              },
              {
                "problemString": "NUM_3,NUM_2",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "NUM_4,NUM_7",
                "type": "VALUE_COMPARISON"
              }
            ]
          }
        },
        {
          "type": "PhaseBase",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 40
            },
            "end": {
              "type": "TIME",
              "value": 180
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": false,
              "errorHiliteType": "NONE"
            },
            "problems": [
              {
                "problemString": "NUM_5,NUM_2",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "NUM_3,NUM_2",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "NUM_4,NUM_6",
                "type": "VALUE_COMPARISON"
              },
              {
                "problemString": "NUM_4,NUM_6",
                "type": "VALUE_COMPARISON"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "Mattetest 1 NEW",
      "id": "newMathTest01",
      "progVisualizer": "ProgVisualizerSnails",
      "progVisualizerData": {
        "progressIndicatorType": "END"
      },
      "phases": [
        {
          "type": "PhaseBase",
          "phase": "GUIDE",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 4
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "hintCorrect": true,
              "useDoneButton": true,
              "errorHiliteType": "SHOW_CORRECT"
            },
            "problems": [
              {
                "problemString": "3+1=?,4",
                "type": "MISSING_SYMBOL",
                "hintDelay": 6,
                "showDemoAnimation": true
              },
              {
                "problemString": "3+3=?,6",
                "type": "MISSING_SYMBOL",
                "hintDelay": 6
              },
              {
                "problemString": "5+5=?,10",
                "type": "MISSING_SYMBOL",
                "hintDelay": 6,
                "showDemoAnimation": true
              },
              {
                "problemString": "1+1=?,2,7",
                "type": "MISSING_SYMBOL",
                "hintDelay": 6,
                "showDemoAnimation": true
              }
            ]
          }
        },
        {
          "type": "PhaseBase",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 40
            },
            "fail": {
              "type": "INCORRECT_IN_ROW",
              "value": 4
            },
            "end": {
              "type": "TIME",
              "value": 180
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": false,
              "useDoneButton": true,
              "errorHiliteType": "NONE"
            },
            "problems": [
              {
                "problemString": "2+1=?,3",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "1+3=?,4",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "1+2=?,3",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "2+2=?,4",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "2+3=?,5",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4+3=?,7",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "1+5=?,6",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "3+2=?,5",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "2+5=?,7",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4+2=?,6",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5+3=?,8",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "3+6=?,9",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4+4=?,8",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "2+7=?,9",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7+3=?,10",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "8+4=?,12",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5+5=?,10",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4+7=?,11",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "6+6=?,12",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5+6=?,11",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7+5=?,12",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4+6=?,10",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "3+8=?,11",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7+6=?,13",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "6+8=?,14",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "3+9=?,12",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "9+5=?,14",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5+10=?,15",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7+7=?,14",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "9+6=?,15",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "8+8=?,16",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "11+3=?,14",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "2+13=?,15",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "12+6=?,18",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4+11=?,15",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "10+7=?,17",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7+12=?,19",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "17+14=?,31",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "21+18=?,39",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "16+26=?,42",
                "type": "MISSING_SYMBOL"
              }
            ]
          }
        },
        {
          "type": "PhaseBase",
          "phase": "GUIDE",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 3
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "hintCorrect": true,
              "useDoneButton": true,
              "errorHiliteType": "SHOW_CORRECT"
            },
            "problems": [
              {
                "problemString": "3-1=?,2",
                "type": "MISSING_SYMBOL",
                "hintDelay": 3
              },
              {
                "problemString": "3-3=?,0",
                "type": "MISSING_SYMBOL",
                "hintDelay": 3
              },
              {
                "problemString": "5-2=?,3",
                "type": "MISSING_SYMBOL",
                "hintDelay": 3
              }
            ]
          }
        },
        {
          "type": "PhaseBase",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 40
            },
            "end": {
              "type": "TIME",
              "value": 180
            }
          },
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": false,
              "useDoneButton": true,
              "errorHiliteType": "NONE"
            },
            "problems": [
              {
                "problemString": "2-1=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "1-1=?,0",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "3-1=?,2",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "2-2=?,0",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "3-2=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "4-1=?,3",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5-1=?,4",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "6-1=?,5",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "6-6=?,0",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "10-1=?,9",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "10-5=?,5",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "8-1=?,7",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7-2=?,5",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5-4=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "8-4=?,4",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "6-5=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "9-8=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "8-2=?,6",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "5-2=?,3",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "15-5=?,10",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "11-11=?,0",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "10-3=?,7",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "11-10=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "9-1=?,8",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "8-8=?,0",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "11-1=?,10",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "20-19=?,1",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "17-6=?,11",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "12-2=?,10",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "18-2=?,16",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "17-5=?,12",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "13-5=?,8",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "7-5=?,2",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "18-7=?,11",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "20-11=?,9",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "25-4=?,21",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "31-6=?,25",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "40-20=?,20",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "48-16=?,32",
                "type": "MISSING_SYMBOL"
              },
              {
                "problemString": "43-14=?,29",
                "type": "MISSING_SYMBOL"
              }
            ]
          }
        }
      ]
    },
    {
      "title": "NumberPals",
      "id": "npals#inf",
      "progVisualizer": "fullScreen",
      "progVisualizerData": {
        "progressIndicatorType": "END"
      },
      "phases": [
        {
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 11
            },
            "end": {
              "type": "TIME",
              "value": 90
            }
          },
          "type": "PhaseTenPals"
        }
      ]
    },
    {
      "title": "NumberLine",
      "id": "numberline#inf",
      "phases": [
        {
          "type": "PhaseArrows",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 3
            }
          },
          "problemGeneratorData": {
            "generator": "ProblemGeneratorArrowsSummerTraining",
            "problemProps": {
              "correctBeforeNext": true
            }
          }
        }
      ]
    },
    {
      "title": "Grid",
      "id": "WM_grid#inf",
      "phases": [
        {
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "dynamicValue": {
                "type": "MEDALS",
                "values": [
                  5,
                  6,
                  7
                ],
                "adaptAfterNoOfFails": 2
              }
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "type": "PhaseWorkingMemory",
          "stimuliType": "WM_GRID"
        }
      ]
    },
    {
      "title": "MemoCrush",
      "id": "WM_crush#inf",
      "phases": [
        {
          "phase": "TEST",
          "type": "PhaseMemoCrush",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "showDialogBetween": true,
          "stimuliType": "WM_CRUSH"
        }
      ]
    },
    {
      "id": "WM_3dgrid#inf",
      "title": "3d-Grid",
      "phases": [
        {
          "phase": "TEST",
          "type": "PhaseWorkingMemory",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "stimuliType": "WM_3DGRID",
          "problemGeneratorData": {
            "problemProps": {
              "gridWidth": 2
            }
          }
        }
      ]
    },
    {
      "title": "Circle",
      "id": "WM_circle#inf",
      "phases": [
        {
          "phase": "TEST",
          "type": "PhaseWorkingMemory",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "dynamicValue": {
                "type": "MEDALS",
                "values": [
                  5,
                  6,
                  7
                ],
                "adaptAfterNoOfFails": 2
              }
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "stimuliType": "WM_CIRCLE"
        }
      ]
    },
    {
      "id": "WM_numbers#inf",
      "title": "Digits Backwards",
      "phases": [
        {
          "phase": "TEST",
          "stimuliType": "WM_NUMBERS",
          "type": "PhaseWorkingMemory",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "dynamicValue": {
                "type": "MEDALS",
                "values": [
                  5,
                  6,
                  7
                ],
                "adaptAfterNoOfFails": 2
              }
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          }
        }
      ]
    },
    {
      "title": "Boolean",
      "id": "boolean#inf",
      "isTest": false,
      "phases": [
        {
          "type": "PhaseBoolean",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "fail": {
              "type": "INCORRECT_TOTAL",
              "value": 3
            }
          },
          "problemGeneratorData": {
            "generator": "ProblemGeneratorBoolean",
            "problemProps": {
              "correctBeforeNext": true
            }
          }
        }
      ]
    },
    {
      "title": "Tangram",
      "id": "tangram#inf",
      "progVisualizer": "fullScreen",
      "progVisualizerData": {
        "progressIndicatorType": "END"
      },
      "phases": [
        {
          "type": "PhaseTangram",
          "phase": "TEST",
          "medalMode": "THREE_WINS",
          "problemGeneratorData": {
            "problemProps": {
              "hintDelay": 60
            }
          },
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 1
            },
            "end": {
              "type": "TIME",
              "value": 90
            }
          }
        }
      ]
    },
    {
      "title": "Rotation",
      "id": "rotation#inf",
      "isTest": false,
      "phases": [
        {
          "type": "PhaseVisiospatial",
          "phase": "TEST",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 3
            }
          }
        }
      ]
    },
    {
      "id": "nvr_cl",
      "title": "NVR Classification",
      "phases": [
        {
          "phase": "TEST",
          "type": "PhaseNVR",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "problemFactory": {
            "nvr_type": "Classification"
          },
          "stimuliType": "NVR",
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "useDoneButton": true
            }
          }
        }
      ]
    },
    {
      "id": "nvr_rp",
      "title": "NVR Repeated patterns",
      "phases": [
        {
          "phase": "TEST",
          "type": "PhaseNVR",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "problemFactory": {
            "nvr_type": "RepeatedPatterns"
          },
          "stimuliType": "NVR",
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "useDoneButton": true
            }
          }
        }
      ]
    },
    {
      "id": "nvr_so",
      "title": "NVR SequentialOrder",
      "phases": [
        {
          "phase": "TEST",
          "type": "PhaseNVR",
          "endCriteriaData": {
            "target": {
              "type": "CORRECT_TOTAL",
              "value": 7
            },
            "end": {
              "type": "INCORRECT_TOTAL",
              "value": 5
            }
          },
          "problemFactory": {
            "nvr_type": "SequentialOrder"
          },
          "stimuliType": "NVR",
          "problemGeneratorData": {
            "problemProps": {
              "correctBeforeNext": true,
              "useDoneButton": true
            }
          }
        }
      ]
    }
  ]
}